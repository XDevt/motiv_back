from core import router, types, F
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from database import db
from handlers.start_handler import start_handler


@router.message(F.text)
async def status_handler(message: types.Message):
    if await db.get_user(message.from_user.id) == None:
        return await start_handler(message)
    status = await db.get_status(message.from_user.id)

    if status != None:
        if "TurnOnOff" in status:
            quest_id = status.split(":")[1]

            if message.text == "–í–∫–ª—é—á–∏—Ç—å —Å–µ–π—á–∞—Å":
                await db.turn_on_quest(quest_id)
                await message.answer("–ì–æ—Ç–æ–≤–æ, task –≤–∫–ª—é—á–µ–Ω!", reply_markup=ReplyKeyboardRemove())
                await db.set_status(message.from_user.id)

            elif message.text == "–í–∫–ª—é—á–∏—Ç—å –ø–æ–∑–∂–µ":
                await message.answer("–•–æ—Ä–æ—à–æ, task –≤—ã–∫–ª—é—á–µ–Ω!", reply_markup=ReplyKeyboardRemove())
                await db.set_status(message.from_user.id)

            elif message.text == "–û—Ç–º–µ–Ω–∞":
                await db.delete_quest(quest_id)
                await message.answer("Task —É–¥–∞–ª–µ–Ω!", reply_markup=ReplyKeyboardRemove())
                await db.set_status(message.from_user.id)

            else:
                keyboard = ReplyKeyboardMarkup(keyboard=[
                    [KeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å —Å–µ–π—á–∞—Å")],
                    [KeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å –ø–æ–∑–∂–µ")],
                    [KeyboardButton(text="–û—Ç–º–µ–Ω–∞")]
                ], resize_keyboard=True)
                await message.answer("–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –Ω–∏–∂–µ üëá", reply_markup=keyboard)